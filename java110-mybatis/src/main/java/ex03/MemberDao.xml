<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberdao">

<!-- 컬럼명과 자바 객체의 프로퍼티 명이 다를 경우, 컬렁명에 대해 프로퍼티 이름과 같게 별명을 지정해야만 제대로 DB 컬럼 값이 객체에 저장된다.
     그러나, 매번 select를 실행할 때 마다 컬럼에 대해 별명을 지정하는 것은 매우 불편하고 번거로운 일이다.
     이를 해결하기 위해 다음의 태그를 사용한다.
     즉, 컬럼과 프로퍼티를 맺어주는 선언이다.-->
  
  <resultMap type="member" id="memberMap"> <!-- select 문이랑만 상관 있음! -->
    <id column="mno" property="no"/> <!-- pk인 컬럼인 경우 id라 해야 함 -->
    <result column="name" property="name"/> <!-- name~tel 까지는 안해도 됨. 적지 않으면 그 이름으로 연결 -->
    <result column="email" property="email"/>
    <result column="tel" property="tel"/>
  </resultMap>

<!--  여러 곳에서 공통으로 사용하는 SQL문이 있다면 다음과 같이 별도로 정의해 놓고 필요한 곳에서 삽입한다. -->
     <sql id="select1">
     select m.mno, m.name, m.email, m.tel
     </sql>

<!-- SQL을 작성할 떄 SQL의 id는 가능한 DAO의 메서드명과 같게 하라! 나중에 유지보수 할 때 찾기 쉽다. -->

  <select id="findAll" resultMap="memberMap"> <!--  resultMap의 id 값과 일치해야 함 ! resultMap이라 적어야 함. (resultType아님!!)-->
    <include refid="select1"></include>
    from p1_memb m
  </select>
  
  <select id="findByNo" resultMap="memberMap" parameterType="int">
    <include refid="select1"></include>
    from p1_memb m
    where mno=#{no}
  </select>

<insert id="insert" parameterType="member" useGeneratedKeys="true" keyColumn="mno" keyProperty="no">
    insert into p1_memb(name,email,pwd,tel,cdt)
    values(#{name},#{email},password(#{password}),#{tel},now())   
</insert>
  
  <!-- parameter type 이 primitive 타입인 경우 #{}을 마음대로 지정할 수 있음-->
  <delete id="delete" parameterType="int">
   delete 
   from p1_memb 
   where mno=#{no}
  </delete>
</mapper>